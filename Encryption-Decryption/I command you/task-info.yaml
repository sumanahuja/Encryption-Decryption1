type: edu
files:
- name: src/Main.kt
  visible: true
  text: |-
    package encryptdecrypt

    fun main() {
        val str = "we found a treasure!"
        var newstr=""
        val strLength = str.length
        for (i in 0..strLength-1)
        {
            if(str[i] == 'w') {
                newstr = newstr + "d"
            }
            if(str[i] == 'e') {
                newstr = newstr+"v"
            }
            if(str[i] == 'f') {
                newstr = newstr+"u"
            }
            if(str[i] == 'o') {
                newstr = newstr+"l"
            }
            if(str[i] == 'u') {
                newstr = newstr+"f"
            }
            if(str[i] == 'n') {
                newstr = newstr+"m"
            }
            if(str[i] == 'd') {
                newstr = newstr+"w"
            }
            if(str[i] == ' ') {
                newstr = newstr+" "
            }
            if(str[i] == 'a') {
                newstr += "z"
            }
            if(str[i] == 't') {
                newstr = newstr+"g"
            }
            if(str[i] == 'r') {
                newstr = newstr+"i"
            }
            if(str[i] == 's') {
                newstr = newstr+"h"
            }
            if(str[i] == '!') {
                newstr = newstr+"!"
            }
        }

        println(newstr)

    }
  learner_created: false
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testcase.TestCase;

    import java.util.List;

    public class EncryptDecryptTest extends StageTest<String> {

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-data", "Welcome to hyperskill!"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-data", "Hello"
                    )
                    .setAttach("Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-data", "012345678",
                        "-mode", "enc"
                    )
                    .setAttach("123456789"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-data", "\\jqhtrj%yt%m~ujwxpnqq&",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-data", "Hi"
                    )
                    .setAttach("Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-data", "222233334444"
                    )
                    .setAttach("111122223333")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            return new CheckResult(reply.trim().equals(clue.trim()));
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/279/stages/1418/implement#comment
status: Unchecked
record: -1
